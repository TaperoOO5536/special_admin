// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: special-admin.proto

package special_admin_v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SpecialAdminService_GetUsers_FullMethodName           = "/special_app_v1.SpecialAdminService/GetUsers"
	SpecialAdminService_GetEventInfo_FullMethodName       = "/special_app_v1.SpecialAdminService/GetEventInfo"
	SpecialAdminService_GetEvents_FullMethodName          = "/special_app_v1.SpecialAdminService/GetEvents"
	SpecialAdminService_CreateEvent_FullMethodName        = "/special_app_v1.SpecialAdminService/CreateEvent"
	SpecialAdminService_UpdateEvent_FullMethodName        = "/special_app_v1.SpecialAdminService/UpdateEvent"
	SpecialAdminService_DeleteEvent_FullMethodName        = "/special_app_v1.SpecialAdminService/DeleteEvent"
	SpecialAdminService_CreateEventPicture_FullMethodName = "/special_app_v1.SpecialAdminService/CreateEventPicture"
	SpecialAdminService_DeleteEventPicture_FullMethodName = "/special_app_v1.SpecialAdminService/DeleteEventPicture"
	SpecialAdminService_GetItemInfo_FullMethodName        = "/special_app_v1.SpecialAdminService/GetItemInfo"
	SpecialAdminService_GetItems_FullMethodName           = "/special_app_v1.SpecialAdminService/GetItems"
	SpecialAdminService_CreateItem_FullMethodName         = "/special_app_v1.SpecialAdminService/CreateItem"
	SpecialAdminService_UpdateItem_FullMethodName         = "/special_app_v1.SpecialAdminService/UpdateItem"
	SpecialAdminService_DeleteItem_FullMethodName         = "/special_app_v1.SpecialAdminService/DeleteItem"
	SpecialAdminService_CreateItemPicture_FullMethodName  = "/special_app_v1.SpecialAdminService/CreateItemPicture"
	SpecialAdminService_DeleteItemPicture_FullMethodName  = "/special_app_v1.SpecialAdminService/DeleteItemPicture"
	SpecialAdminService_GetOrderInfo_FullMethodName       = "/special_app_v1.SpecialAdminService/GetOrderInfo"
	SpecialAdminService_GetOrders_FullMethodName          = "/special_app_v1.SpecialAdminService/GetOrders"
	SpecialAdminService_UpdateOrder_FullMethodName        = "/special_app_v1.SpecialAdminService/UpdateOrder"
	SpecialAdminService_DeleteOrder_FullMethodName        = "/special_app_v1.SpecialAdminService/DeleteOrder"
)

// SpecialAdminServiceClient is the client API for SpecialAdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SpecialAdminServiceClient interface {
	GetUsers(ctx context.Context, in *GetUsersRequest, opts ...grpc.CallOption) (*GetUsersResponse, error)
	GetEventInfo(ctx context.Context, in *GetEventInfoRequest, opts ...grpc.CallOption) (*GetEventInfoResponse, error)
	GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (*GetEventsResponse, error)
	CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*GetEventInfoResponse, error)
	UpdateEvent(ctx context.Context, in *UpdateEventRequest, opts ...grpc.CallOption) (*GetEventInfoResponse, error)
	DeleteEvent(ctx context.Context, in *DeleteEventRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CreateEventPicture(ctx context.Context, in *CreatePictureRequest, opts ...grpc.CallOption) (*GetEventInfoResponse, error)
	DeleteEventPicture(ctx context.Context, in *DeletePictureRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetItemInfo(ctx context.Context, in *GetItemInfoRequest, opts ...grpc.CallOption) (*GetItemInfoResponse, error)
	GetItems(ctx context.Context, in *GetItemsRequest, opts ...grpc.CallOption) (*GetItemsResponse, error)
	CreateItem(ctx context.Context, in *CreateItemRequest, opts ...grpc.CallOption) (*GetItemInfoResponse, error)
	UpdateItem(ctx context.Context, in *UpdateItemRequest, opts ...grpc.CallOption) (*GetItemInfoResponse, error)
	DeleteItem(ctx context.Context, in *DeleteItemRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CreateItemPicture(ctx context.Context, in *CreatePictureRequest, opts ...grpc.CallOption) (*GetItemInfoResponse, error)
	DeleteItemPicture(ctx context.Context, in *DeletePictureRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetOrderInfo(ctx context.Context, in *GetOrderInfoRequest, opts ...grpc.CallOption) (*GetOrderInfoResponse, error)
	GetOrders(ctx context.Context, in *GetOrdersRequest, opts ...grpc.CallOption) (*GetOrdersResponse, error)
	UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*GetOrderInfoResponse, error)
	DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type specialAdminServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSpecialAdminServiceClient(cc grpc.ClientConnInterface) SpecialAdminServiceClient {
	return &specialAdminServiceClient{cc}
}

func (c *specialAdminServiceClient) GetUsers(ctx context.Context, in *GetUsersRequest, opts ...grpc.CallOption) (*GetUsersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetUsersResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_GetUsers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) GetEventInfo(ctx context.Context, in *GetEventInfoRequest, opts ...grpc.CallOption) (*GetEventInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetEventInfoResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_GetEventInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (*GetEventsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetEventsResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_GetEvents_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*GetEventInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetEventInfoResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_CreateEvent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) UpdateEvent(ctx context.Context, in *UpdateEventRequest, opts ...grpc.CallOption) (*GetEventInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetEventInfoResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_UpdateEvent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) DeleteEvent(ctx context.Context, in *DeleteEventRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, SpecialAdminService_DeleteEvent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) CreateEventPicture(ctx context.Context, in *CreatePictureRequest, opts ...grpc.CallOption) (*GetEventInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetEventInfoResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_CreateEventPicture_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) DeleteEventPicture(ctx context.Context, in *DeletePictureRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, SpecialAdminService_DeleteEventPicture_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) GetItemInfo(ctx context.Context, in *GetItemInfoRequest, opts ...grpc.CallOption) (*GetItemInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetItemInfoResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_GetItemInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) GetItems(ctx context.Context, in *GetItemsRequest, opts ...grpc.CallOption) (*GetItemsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetItemsResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_GetItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) CreateItem(ctx context.Context, in *CreateItemRequest, opts ...grpc.CallOption) (*GetItemInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetItemInfoResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_CreateItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) UpdateItem(ctx context.Context, in *UpdateItemRequest, opts ...grpc.CallOption) (*GetItemInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetItemInfoResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_UpdateItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) DeleteItem(ctx context.Context, in *DeleteItemRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, SpecialAdminService_DeleteItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) CreateItemPicture(ctx context.Context, in *CreatePictureRequest, opts ...grpc.CallOption) (*GetItemInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetItemInfoResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_CreateItemPicture_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) DeleteItemPicture(ctx context.Context, in *DeletePictureRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, SpecialAdminService_DeleteItemPicture_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) GetOrderInfo(ctx context.Context, in *GetOrderInfoRequest, opts ...grpc.CallOption) (*GetOrderInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetOrderInfoResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_GetOrderInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) GetOrders(ctx context.Context, in *GetOrdersRequest, opts ...grpc.CallOption) (*GetOrdersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetOrdersResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_GetOrders_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*GetOrderInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetOrderInfoResponse)
	err := c.cc.Invoke(ctx, SpecialAdminService_UpdateOrder_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialAdminServiceClient) DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, SpecialAdminService_DeleteOrder_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpecialAdminServiceServer is the server API for SpecialAdminService service.
// All implementations must embed UnimplementedSpecialAdminServiceServer
// for forward compatibility.
type SpecialAdminServiceServer interface {
	GetUsers(context.Context, *GetUsersRequest) (*GetUsersResponse, error)
	GetEventInfo(context.Context, *GetEventInfoRequest) (*GetEventInfoResponse, error)
	GetEvents(context.Context, *GetEventsRequest) (*GetEventsResponse, error)
	CreateEvent(context.Context, *CreateEventRequest) (*GetEventInfoResponse, error)
	UpdateEvent(context.Context, *UpdateEventRequest) (*GetEventInfoResponse, error)
	DeleteEvent(context.Context, *DeleteEventRequest) (*emptypb.Empty, error)
	CreateEventPicture(context.Context, *CreatePictureRequest) (*GetEventInfoResponse, error)
	DeleteEventPicture(context.Context, *DeletePictureRequest) (*emptypb.Empty, error)
	GetItemInfo(context.Context, *GetItemInfoRequest) (*GetItemInfoResponse, error)
	GetItems(context.Context, *GetItemsRequest) (*GetItemsResponse, error)
	CreateItem(context.Context, *CreateItemRequest) (*GetItemInfoResponse, error)
	UpdateItem(context.Context, *UpdateItemRequest) (*GetItemInfoResponse, error)
	DeleteItem(context.Context, *DeleteItemRequest) (*emptypb.Empty, error)
	CreateItemPicture(context.Context, *CreatePictureRequest) (*GetItemInfoResponse, error)
	DeleteItemPicture(context.Context, *DeletePictureRequest) (*emptypb.Empty, error)
	GetOrderInfo(context.Context, *GetOrderInfoRequest) (*GetOrderInfoResponse, error)
	GetOrders(context.Context, *GetOrdersRequest) (*GetOrdersResponse, error)
	UpdateOrder(context.Context, *UpdateOrderRequest) (*GetOrderInfoResponse, error)
	DeleteOrder(context.Context, *DeleteOrderRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedSpecialAdminServiceServer()
}

// UnimplementedSpecialAdminServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSpecialAdminServiceServer struct{}

func (UnimplementedSpecialAdminServiceServer) GetUsers(context.Context, *GetUsersRequest) (*GetUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (UnimplementedSpecialAdminServiceServer) GetEventInfo(context.Context, *GetEventInfoRequest) (*GetEventInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventInfo not implemented")
}
func (UnimplementedSpecialAdminServiceServer) GetEvents(context.Context, *GetEventsRequest) (*GetEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvents not implemented")
}
func (UnimplementedSpecialAdminServiceServer) CreateEvent(context.Context, *CreateEventRequest) (*GetEventInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (UnimplementedSpecialAdminServiceServer) UpdateEvent(context.Context, *UpdateEventRequest) (*GetEventInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (UnimplementedSpecialAdminServiceServer) DeleteEvent(context.Context, *DeleteEventRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEvent not implemented")
}
func (UnimplementedSpecialAdminServiceServer) CreateEventPicture(context.Context, *CreatePictureRequest) (*GetEventInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEventPicture not implemented")
}
func (UnimplementedSpecialAdminServiceServer) DeleteEventPicture(context.Context, *DeletePictureRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEventPicture not implemented")
}
func (UnimplementedSpecialAdminServiceServer) GetItemInfo(context.Context, *GetItemInfoRequest) (*GetItemInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemInfo not implemented")
}
func (UnimplementedSpecialAdminServiceServer) GetItems(context.Context, *GetItemsRequest) (*GetItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItems not implemented")
}
func (UnimplementedSpecialAdminServiceServer) CreateItem(context.Context, *CreateItemRequest) (*GetItemInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateItem not implemented")
}
func (UnimplementedSpecialAdminServiceServer) UpdateItem(context.Context, *UpdateItemRequest) (*GetItemInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateItem not implemented")
}
func (UnimplementedSpecialAdminServiceServer) DeleteItem(context.Context, *DeleteItemRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteItem not implemented")
}
func (UnimplementedSpecialAdminServiceServer) CreateItemPicture(context.Context, *CreatePictureRequest) (*GetItemInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateItemPicture not implemented")
}
func (UnimplementedSpecialAdminServiceServer) DeleteItemPicture(context.Context, *DeletePictureRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteItemPicture not implemented")
}
func (UnimplementedSpecialAdminServiceServer) GetOrderInfo(context.Context, *GetOrderInfoRequest) (*GetOrderInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderInfo not implemented")
}
func (UnimplementedSpecialAdminServiceServer) GetOrders(context.Context, *GetOrdersRequest) (*GetOrdersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrders not implemented")
}
func (UnimplementedSpecialAdminServiceServer) UpdateOrder(context.Context, *UpdateOrderRequest) (*GetOrderInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrder not implemented")
}
func (UnimplementedSpecialAdminServiceServer) DeleteOrder(context.Context, *DeleteOrderRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOrder not implemented")
}
func (UnimplementedSpecialAdminServiceServer) mustEmbedUnimplementedSpecialAdminServiceServer() {}
func (UnimplementedSpecialAdminServiceServer) testEmbeddedByValue()                             {}

// UnsafeSpecialAdminServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SpecialAdminServiceServer will
// result in compilation errors.
type UnsafeSpecialAdminServiceServer interface {
	mustEmbedUnimplementedSpecialAdminServiceServer()
}

func RegisterSpecialAdminServiceServer(s grpc.ServiceRegistrar, srv SpecialAdminServiceServer) {
	// If the following call pancis, it indicates UnimplementedSpecialAdminServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SpecialAdminService_ServiceDesc, srv)
}

func _SpecialAdminService_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_GetUsers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).GetUsers(ctx, req.(*GetUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_GetEventInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).GetEventInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_GetEventInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).GetEventInfo(ctx, req.(*GetEventInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_GetEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).GetEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_GetEvents_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).GetEvents(ctx, req.(*GetEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_CreateEvent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).CreateEvent(ctx, req.(*CreateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_UpdateEvent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).UpdateEvent(ctx, req.(*UpdateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_DeleteEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).DeleteEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_DeleteEvent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).DeleteEvent(ctx, req.(*DeleteEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_CreateEventPicture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePictureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).CreateEventPicture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_CreateEventPicture_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).CreateEventPicture(ctx, req.(*CreatePictureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_DeleteEventPicture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePictureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).DeleteEventPicture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_DeleteEventPicture_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).DeleteEventPicture(ctx, req.(*DeletePictureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_GetItemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).GetItemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_GetItemInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).GetItemInfo(ctx, req.(*GetItemInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_GetItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).GetItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_GetItems_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).GetItems(ctx, req.(*GetItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_CreateItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).CreateItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_CreateItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).CreateItem(ctx, req.(*CreateItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_UpdateItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).UpdateItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_UpdateItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).UpdateItem(ctx, req.(*UpdateItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_DeleteItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).DeleteItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_DeleteItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).DeleteItem(ctx, req.(*DeleteItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_CreateItemPicture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePictureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).CreateItemPicture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_CreateItemPicture_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).CreateItemPicture(ctx, req.(*CreatePictureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_DeleteItemPicture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePictureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).DeleteItemPicture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_DeleteItemPicture_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).DeleteItemPicture(ctx, req.(*DeletePictureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_GetOrderInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).GetOrderInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_GetOrderInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).GetOrderInfo(ctx, req.(*GetOrderInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_GetOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).GetOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_GetOrders_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).GetOrders(ctx, req.(*GetOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_UpdateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).UpdateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_UpdateOrder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).UpdateOrder(ctx, req.(*UpdateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialAdminService_DeleteOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialAdminServiceServer).DeleteOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpecialAdminService_DeleteOrder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialAdminServiceServer).DeleteOrder(ctx, req.(*DeleteOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SpecialAdminService_ServiceDesc is the grpc.ServiceDesc for SpecialAdminService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SpecialAdminService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "special_app_v1.SpecialAdminService",
	HandlerType: (*SpecialAdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUsers",
			Handler:    _SpecialAdminService_GetUsers_Handler,
		},
		{
			MethodName: "GetEventInfo",
			Handler:    _SpecialAdminService_GetEventInfo_Handler,
		},
		{
			MethodName: "GetEvents",
			Handler:    _SpecialAdminService_GetEvents_Handler,
		},
		{
			MethodName: "CreateEvent",
			Handler:    _SpecialAdminService_CreateEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _SpecialAdminService_UpdateEvent_Handler,
		},
		{
			MethodName: "DeleteEvent",
			Handler:    _SpecialAdminService_DeleteEvent_Handler,
		},
		{
			MethodName: "CreateEventPicture",
			Handler:    _SpecialAdminService_CreateEventPicture_Handler,
		},
		{
			MethodName: "DeleteEventPicture",
			Handler:    _SpecialAdminService_DeleteEventPicture_Handler,
		},
		{
			MethodName: "GetItemInfo",
			Handler:    _SpecialAdminService_GetItemInfo_Handler,
		},
		{
			MethodName: "GetItems",
			Handler:    _SpecialAdminService_GetItems_Handler,
		},
		{
			MethodName: "CreateItem",
			Handler:    _SpecialAdminService_CreateItem_Handler,
		},
		{
			MethodName: "UpdateItem",
			Handler:    _SpecialAdminService_UpdateItem_Handler,
		},
		{
			MethodName: "DeleteItem",
			Handler:    _SpecialAdminService_DeleteItem_Handler,
		},
		{
			MethodName: "CreateItemPicture",
			Handler:    _SpecialAdminService_CreateItemPicture_Handler,
		},
		{
			MethodName: "DeleteItemPicture",
			Handler:    _SpecialAdminService_DeleteItemPicture_Handler,
		},
		{
			MethodName: "GetOrderInfo",
			Handler:    _SpecialAdminService_GetOrderInfo_Handler,
		},
		{
			MethodName: "GetOrders",
			Handler:    _SpecialAdminService_GetOrders_Handler,
		},
		{
			MethodName: "UpdateOrder",
			Handler:    _SpecialAdminService_UpdateOrder_Handler,
		},
		{
			MethodName: "DeleteOrder",
			Handler:    _SpecialAdminService_DeleteOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "special-admin.proto",
}
